/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as HomeRouteImport } from './routes/_home'
import { Route as IndexRouteImport } from './routes/index'
import { Route as HomeHomeIndexRouteImport } from './routes/_home/home/index'
import { Route as HomeHomeSavingsRouteImport } from './routes/_home/home/savings'
import { Route as HomeHomeFriendsRouteImport } from './routes/_home/home/friends'
import { Route as HomeHomeExpensesRouteImport } from './routes/_home/home/expenses'
import { Route as HomeHomeEarningsRouteImport } from './routes/_home/home/earnings'

const HomeRoute = HomeRouteImport.update({
  id: '/_home',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeHomeIndexRoute = HomeHomeIndexRouteImport.update({
  id: '/home/',
  path: '/home/',
  getParentRoute: () => HomeRoute,
} as any)
const HomeHomeSavingsRoute = HomeHomeSavingsRouteImport.update({
  id: '/home/savings',
  path: '/home/savings',
  getParentRoute: () => HomeRoute,
} as any)
const HomeHomeFriendsRoute = HomeHomeFriendsRouteImport.update({
  id: '/home/friends',
  path: '/home/friends',
  getParentRoute: () => HomeRoute,
} as any)
const HomeHomeExpensesRoute = HomeHomeExpensesRouteImport.update({
  id: '/home/expenses',
  path: '/home/expenses',
  getParentRoute: () => HomeRoute,
} as any)
const HomeHomeEarningsRoute = HomeHomeEarningsRouteImport.update({
  id: '/home/earnings',
  path: '/home/earnings',
  getParentRoute: () => HomeRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/home/earnings': typeof HomeHomeEarningsRoute
  '/home/expenses': typeof HomeHomeExpensesRoute
  '/home/friends': typeof HomeHomeFriendsRoute
  '/home/savings': typeof HomeHomeSavingsRoute
  '/home': typeof HomeHomeIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/home/earnings': typeof HomeHomeEarningsRoute
  '/home/expenses': typeof HomeHomeExpensesRoute
  '/home/friends': typeof HomeHomeFriendsRoute
  '/home/savings': typeof HomeHomeSavingsRoute
  '/home': typeof HomeHomeIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_home': typeof HomeRouteWithChildren
  '/_home/home/earnings': typeof HomeHomeEarningsRoute
  '/_home/home/expenses': typeof HomeHomeExpensesRoute
  '/_home/home/friends': typeof HomeHomeFriendsRoute
  '/_home/home/savings': typeof HomeHomeSavingsRoute
  '/_home/home/': typeof HomeHomeIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/home/earnings'
    | '/home/expenses'
    | '/home/friends'
    | '/home/savings'
    | '/home'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/home/earnings'
    | '/home/expenses'
    | '/home/friends'
    | '/home/savings'
    | '/home'
  id:
    | '__root__'
    | '/'
    | '/_home'
    | '/_home/home/earnings'
    | '/_home/home/expenses'
    | '/_home/home/friends'
    | '/_home/home/savings'
    | '/_home/home/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  HomeRoute: typeof HomeRouteWithChildren
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_home': {
      id: '/_home'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof HomeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_home/home/': {
      id: '/_home/home/'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeHomeIndexRouteImport
      parentRoute: typeof HomeRoute
    }
    '/_home/home/savings': {
      id: '/_home/home/savings'
      path: '/home/savings'
      fullPath: '/home/savings'
      preLoaderRoute: typeof HomeHomeSavingsRouteImport
      parentRoute: typeof HomeRoute
    }
    '/_home/home/friends': {
      id: '/_home/home/friends'
      path: '/home/friends'
      fullPath: '/home/friends'
      preLoaderRoute: typeof HomeHomeFriendsRouteImport
      parentRoute: typeof HomeRoute
    }
    '/_home/home/expenses': {
      id: '/_home/home/expenses'
      path: '/home/expenses'
      fullPath: '/home/expenses'
      preLoaderRoute: typeof HomeHomeExpensesRouteImport
      parentRoute: typeof HomeRoute
    }
    '/_home/home/earnings': {
      id: '/_home/home/earnings'
      path: '/home/earnings'
      fullPath: '/home/earnings'
      preLoaderRoute: typeof HomeHomeEarningsRouteImport
      parentRoute: typeof HomeRoute
    }
  }
}

interface HomeRouteChildren {
  HomeHomeEarningsRoute: typeof HomeHomeEarningsRoute
  HomeHomeExpensesRoute: typeof HomeHomeExpensesRoute
  HomeHomeFriendsRoute: typeof HomeHomeFriendsRoute
  HomeHomeSavingsRoute: typeof HomeHomeSavingsRoute
  HomeHomeIndexRoute: typeof HomeHomeIndexRoute
}

const HomeRouteChildren: HomeRouteChildren = {
  HomeHomeEarningsRoute: HomeHomeEarningsRoute,
  HomeHomeExpensesRoute: HomeHomeExpensesRoute,
  HomeHomeFriendsRoute: HomeHomeFriendsRoute,
  HomeHomeSavingsRoute: HomeHomeSavingsRoute,
  HomeHomeIndexRoute: HomeHomeIndexRoute,
}

const HomeRouteWithChildren = HomeRoute._addFileChildren(HomeRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  HomeRoute: HomeRouteWithChildren,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
